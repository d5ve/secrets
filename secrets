#!/usr/bin/perl

use strict;
use warnings;

=head1 WORK IN PROGRESS

This script currently does nothing apart from basic param validation.

=cut

use Getopt::Long qw( GetOptions );
use Pod::Usage qw( pod2usage );
use File::Spec ();
use Term::ReadKey ();

our $VERSION = '0.001';
$VERSION = eval $VERSION;

my $secrets_file = File::Spec->catfile( $ENV{HOME}, '.secrets' );
my $show_help;
my @valid_actions = qw( list ls add edit delete print );

my $action;

GetOptions(
    'file=s' => \$secrets_file,
    'help|?' => \$show_help,
) or pod2usage();

$action = shift || pod2usage("Please specify an <action>");
pod2usage("Invalid <action> '$action'") unless grep { $_ eq $action } @valid_actions;

my $master_password = get_master_password();

exit;


sub get_master_password {

    print "Enter master password: ";
    Term::ReadKey::ReadMode('noecho'); 
    $master_password = Term::ReadKey::ReadLine(0);
    Term::ReadKey::ReadMode('normal');
    print "\n";

    return $master_password;
}

sub read_secrets_from_file {
    my $secret_file = shift;

    my $secrets;

    return $secrets;

};


__END__
